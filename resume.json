{
	"titleNameMap": {
		"educationList": "教育背景",
		"workExpList": "实习经历",
		"projectList": "项目经验",
		"skillList": "个人技能",
		"awardList": "个人奖项",
		"workList": "个人作品",
		"aboutme": "个人评价"
	},
	"avatar": { "src": "https://p.ipic.vip/qdmkwf.jpg", "hidden": false },
	"profile": {
		"name": "李承泽",
		"email": "links426@outlook.com",
		"mobile": "19303012156",
		"github": "https://github.com/Links426",
		"zhihu": "",
		"workExpYear": "",
		"positionTitle": "前端开发"
	},
	"educationList": [
		{
			"edu_time": ["2021.09.01", "2025.06.30"],
			"school": "广州大学",
			"major": "",
			"academic_degree": "本科",
			"dataIndex": 0
		}
	],
	"awardList": [
		{ "award_time": "2023", "award_info": "中国计算机设计大赛省三等奖" },
		{ "award_info": "广州大学网页设计大赛一等奖", "award_time": "2023", "dataIndex": 1 },
		{ "award_info": "两项软件著作权", "award_time": "2023", "dataIndex": 1 },
		{ "award_info": "英语 CET4", "award_time": "2022", "dataIndex": 0 }
	],
	"workExpList": [
		{
			"company_name": "广州大学 系统流变所",
			"department_name": "技术部",
			"work_time": ["2022.11", "2023.03"],
			"work_desc": "前端实习生。使用 Vue 参与服务器控制系统产品的重构与研发工作，与后端进行对接，有良好的编码习惯。",
			"dataIndex": 0
		}
	],
	"skillList": [],
	"projectList": [
		{
			"project_name": "系统流变所节点控制系统",
			"project_role": "前端负责人",
			"project_time": "2023.01 - 2023.03",
			"project_desc": "该项目是一个科研服务平台，让用户可以在网页端远程部署、启动、编辑和运行python代码，并实时监控服务器节点的状态和结果。",
			"project_content": "\n1. 独立负责了整个项目的设计、开发和功能迭代，保证了项目的进度和质量。\n2.  使用 Markdown 格式 ，编写用户使用手册，提供用户指引。\n3. 封装了 Axios 请求，并使用 TypeScript 对接口返回数据进行类型检查和拦截器处理。使用 NProgess 请求进度条，优化用户体验。\n4. 封装了 Monaco 编辑器，并增加了复制、删除、导入等快捷功能，提升了代码编辑的效率和便捷性。\n5. 使用 Suspense 和 defineAsyncComponent 实现了异步组件加载，并在案例请求过程中，显示等待画面，减少了用户的等待感。\n6. 封装 Guacamole ，实现了在网页端远程访问服务器端，方便了用户的操作和监控。\n7. 使用 Keep - Alive 实现了用户切换页面的数据留存以及切换动画，增加了页面的流畅性和美观性。\n8. 使用 Css 变量，实现了暗色模式的切换，满足了用户的个性化需求。",
			"dataIndex": 0
		},
		{
			"project_name": "荟聚通 小程序",
			"project_role": "前端开发",
			"project_time": "2022.12 - 2023.02",
			"project_desc": "本项目是一个校内比赛组队的小程序，旨在为有志于参加各类比赛的学生提供一个便捷的平台，让他们能够轻松地找到合适的队伍和队友。项目采用了众多前沿技术栈，实现了高性能、高可用、高可维护的小程序开发。",
			"project_content": "\n1. 负责小程序注册，登陆的功能开发。通过 Token 保持用户的登录状态，并实现了 无感登陆。\n2. 负责比赛、项目页的开发，实现了用户上传项目到服务器，并同步渲染服务器中的项目数据到页面上。\n3. 封装了Uni.request请求，并使用 TypeScript 对接口返回数据进行类型检查和拦截器处理，提高代码的健壮性和可读性，优化用户体验。\n4. 对UView进行二次封装，增加了自定义属性和事件，优化了组件的样式和交互效果，使得组件更适应小程序的使用。\n5. 使用IntersectionObserver编写自定义指令，实现了图片懒加载的设计，提升了页面的加载速度和用户体验。",
			"dataIndex": 1
		},
		{
			"project_time": "2023.04 - 2023.05",
			"project_name": "个人知识星球 平台",
			"project_role": "前端开发",
			"project_desc": "该项目是一个基于 MarkDown 文件的知识分享平台，让用户可以在本地存放符合命名规则的 MarkDown 文件，并在网页端动态展示和跳转。项目还可以根据文本内容自动生成目录，目录还可根据用户滚动自动切换高亮效果，方便用户快速定位到所需的信息。",
			"project_content": "\n1. 独立负责了整个项目的设计、开发和功能迭代。\n2.  通过 正则表达式、动态导入本地目录、动态路由 和 h函数等方式，实现了本地md文件动态添加，并显示在页面上的功能。\n3. 通过获取页面上的标题元素，并为其添加唯一的 ID 名作为锚点。使用 scrollIntoView 属性，实现了点击目录时，页面自动滚动到对应位置的功能。\n4. 使用 JS 的 scroll 事件，检测用户滚动的方式，并根据滚动位置，自动切换目录的高亮状态，实现了目录随着页面滚动而自动切换的功能。\n5. 通过 netlify，静态部署网站，实现网页的快速上线。",
			"dataIndex": 2
		}
	],
	"workList": [],
	"aboutme": {
		"aboutme_desc": "\n- 熟练 DIV+CSS 布局和重构，遵循网页开发流程，优化切图和HTML代码，提升页面性能和可维护性。能够实现响应式布局，适配各种设备和分辨率，掌握 Flexbox 和 Grid 等先进布局技术。\n- 熟练使用 HTML5+CSS3，编写语义化标签和样式，符合w3c标准，实现动画效果和交互功能。\n- 熟练使用 Javascript 语言，掌握ECMA标准，运用DOM、BOM操作，编写面向对象的JS代码，处理数据格式和正则表达式。熟悉ES6+的新特性，如箭头函数、Promise、async/await等。能够使用 Axios 等库进行DOM操作和网络请求，并进行二次封装。\n- 熟练使用Element-ui、Arco Design、Bootstrap等前端框架，快速构建美观和易用的UI界面，并能够根据需求进行定制和扩展。\n- 熟悉 TypeScript 语言，使用 TS 编写更加健壮和可维护的代码，利用TS的类型系统进行类型检查和推断。\n- 熟悉 Vue 框架，使用webpack或vite搭建vue-cli脚手架开发单页面应用，并打包部署项目。理解MVC和MVVM设计模式和模块化开发流程。能够使用Vue的数据双向绑定，组件化开发，生命周期钩子，路由管理，状态管理等特性。\n- 掌握 Git 版本控制器，进行代码管理和团队协作，遵循git工作流程，处理分支合并和冲突解决等问题。能够使用GitHub或GitLab等平台进行代码托管和协作，并熟悉issue、pull request、code review等功能。\n- 掌握 Figma、XD、MasterGo 和 蓝湖等主流 UI 设计工具，项目均适用 Figma / XD + 蓝湖 自动生成标注的形式开发。\n- 掌握 MarkDown 格式编写文档，可以编写用户使用文档及项目开发文档。\n- 熟悉 Netlify、Github Page等代码托管平台，熟练使用网页静态托管。"
	},
	"theme": { "color": "#2f5785", "tagColor": "#8bc34a" }
}
